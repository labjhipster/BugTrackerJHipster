package es.labj.bugtracker.domain;

import static es.labj.bugtracker.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class CommentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentAllPropertiesEquals(Comment expected, Comment actual) {
        assertCommentAutoGeneratedPropertiesEquals(expected, actual);
        assertCommentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentAllUpdatablePropertiesEquals(Comment expected, Comment actual) {
        assertCommentUpdatableFieldsEquals(expected, actual);
        assertCommentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentAutoGeneratedPropertiesEquals(Comment expected, Comment actual) {
        assertThat(expected)
            .as("Verify Comment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentUpdatableFieldsEquals(Comment expected, Comment actual) {
        assertThat(expected)
            .as("Verify Comment relevant properties")
            .satisfies(e -> assertThat(e.getDate()).as("check date").usingComparator(zonedDataTimeSameInstant).isEqualTo(actual.getDate()))
            .satisfies(e -> assertThat(e.getText()).as("check text").isEqualTo(actual.getText()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentUpdatableRelationshipsEquals(Comment expected, Comment actual) {
        assertThat(expected)
            .as("Verify Comment relationships")
            .satisfies(e -> assertThat(e.getChild()).as("check child").isEqualTo(actual.getChild()));
    }
}
